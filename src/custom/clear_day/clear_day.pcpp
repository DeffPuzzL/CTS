/**************************************************************************************************
    文 件 名：clear_day.pcpp
    代码作者：DeffPuzzL
    编写版本：
    创建日期：2016-07-14
    功能描述：demo实现业务模块
 **************************************************************************************************/
#include    "algo.h"
#include    "clear_day.h"
#define     SQLCA_STORAGE_CLASS     extern
#include    "sqlca.h"

EXEC SQL BEGIN DECLARE SECTION;
#include "tbl_bat_main_list.h"
EXEC SQL END DECLARE SECTION;

CMList          *g_pstCRoot;
Benum           g_eExit = RC_SUCC;

/**************************************************************************************************
    初始化内存定义
 **************************************************************************************************/

/**************************************************************************************************
    方法定义
 **************************************************************************************************/
CClear::stEvent CClear::m_stEvent[] =
{
    {"pause",                      &CClear::vSetSysPause },
    {"", NULL }
};

/**************************************************************************************************
    函 数 名：CClear()
    功能描述：构造函数
    返回说明：
 **************************************************************************************************/
CClear::CClear()
{

}

/**************************************************************************************************
    函 数 名：~CClear()
    功能描述：析构函数
    返回说明：
 **************************************************************************************************/
CClear::~CClear()
{

}

/**************************************************************************************************
    函 数 名：lRunObject(char* in_szClass, char* in_szAction)
    功能描述：运行类中的方法
    返回说明：
        RC_SUCC         --成功
        RC_FAIL         --失败
 **************************************************************************************************/
long    CClear::lRunObject(char* in_szClass, char* in_szAction)
{
    int     i = 0;
    char    *p, szAction[256];

    memset(szAction, 0, sizeof(szAction));
    if((p = strstr(in_szAction, "__")) != NULL)
        strncpy(szAction, in_szAction, p - in_szAction);
    else
        strcpy(szAction, in_szAction);

    while(0 != strcmp(m_stEvent[i].m_szName, ""))
    {
        if(0 == strcmp(m_stEvent[i].m_szName, szAction))
        {
            (this->*m_stEvent[i].m_pEvent)();
            return RC_SUCC;
        }
        i++;
    }

    SYSError(RET_SYSTEM, "组件(%s)的事件(%s)没注册", in_szClass, in_szAction);
    return RC_FAIL;
}

/**************************************************************************************************
    函 数 名：vSetSysPause()
    功能描述：设置平台禁用
    返回说明：
        无
 **************************************************************************************************/
void	CClear::vSetSysPause()
{
	SATvm    *pstSavm = (SATvm *)pGetSATvm();

    if(RC_SUCC != lSetSysState(pstSavm, SYSTEM_PLT_STOP))
    {
        SYSError(RET_SYSTEM, "设置平台状态失败, %s", sGetTError(pstSavm->m_lErrno));
        return ;
    }
}

/*************************************************************************************************
    code end
**************************************************************************************************/
