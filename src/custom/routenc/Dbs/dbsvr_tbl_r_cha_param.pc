/*
 *  Copyright 2006, Shanghai Huateng Software Systems Co., Ltd.
 *  All right reserved.
 *
 *  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF SHANGHAI HUATENG
 *  SOFTWARE SYSTEMS CO., LTD.  THE CONTENTS OF THIS FILE MAY NOT
 *  BE DISCLOSED TO THIRD PARTIES, COPIED OR DUPLICATED IN ANY FORM,
 *  IN WHOLE OR IN PART, WITHOUT THE PRIOR WRITTEN PERMISSION OF
 *  SHANGHAI HUATENG SOFTWARE SYSTEMS CO., LTD.
 *
 *  $Id$
 *
 *  function: table tbl_r_cha_param operator function
 *
 *  Edit History:
 *
 *    2017/08/15 09:18:27 by gendb
 */
 
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "dbs/dbsdef.h"
EXEC SQL include sqlca;
EXEC SQL include sqlda;


EXEC SQL BEGIN DECLARE SECTION;
struct TBL_R_CHA_PARAM_Def {
    char       rowid[21];    /*  */
    int        id;    /*  */
    char       cha_nm[257];    /*  */
    char       cha_nm_cn[257];    /*  */
    char       status[2];    /*  */
    char       cha_flag_ys[2];    /*  */
    char       cha_flag_qs[2];    /*  */
    int        resv1;    /*  */
    char       resv2[33];    /*  */
    char       resv3[129];    /*  */
    char       xntd_flag[2];    /* 是否虚拟通道 */
    char       cha_zsnm[9];    /* 真实通道名 */
    int        priority;    /* 通道优先级 */
} ltTBL_R_CHA_PARAM;
short s_ind;
char  s_count[33];
EXEC SQL END DECLARE SECTION;
/*************************************************************************/
/*    input : DBS_FUNC   the dbs func                                    */
/*            The struct pointer defined in upper.                       */
/*    return : the sqlca.sqlcode                                         */
/*************************************************************************/
int DbsTBL_R_CHA_PARAM(int ifunc, struct TBL_R_CHA_PARAM_Def *pTBL_R_CHA_PARAM)
{
    memcpy(&ltTBL_R_CHA_PARAM, pTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));

    switch (ifunc) {
    case DBS_SELECT1 :
        EXEC SQL SELECT
            ROWID ,
            ID ,
            CHA_NM ,
            CHA_NM_CN ,
            STATUS ,
            CHA_FLAG_YS ,
            CHA_FLAG_QS ,
            RESV1 ,
            RESV2 ,
            RESV3 ,
            XNTD_FLAG ,
            CHA_ZSNM ,
            PRIORITY
        INTO
            :ltTBL_R_CHA_PARAM.rowid :s_ind ,
            :ltTBL_R_CHA_PARAM.id :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm_cn :s_ind ,
            :ltTBL_R_CHA_PARAM.status :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_ys :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_qs :s_ind ,
            :ltTBL_R_CHA_PARAM.resv1 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv2 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv3 :s_ind ,
            :ltTBL_R_CHA_PARAM.xntd_flag :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_zsnm :s_ind ,
            :ltTBL_R_CHA_PARAM.priority :s_ind
        FROM
            tbl_r_cha_param
        WHERE
            CHA_NM = :ltTBL_R_CHA_PARAM.cha_nm;

        memcpy(pTBL_R_CHA_PARAM, &ltTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));
        break;

    case DBS_SELECT2 :
        EXEC SQL SELECT
            ROWID ,
            ID ,
            CHA_NM ,
            CHA_NM_CN ,
            STATUS ,
            CHA_FLAG_YS ,
            CHA_FLAG_QS ,
            RESV1 ,
            RESV2 ,
            RESV3 ,
            XNTD_FLAG ,
            CHA_ZSNM ,
            PRIORITY
        INTO
            :ltTBL_R_CHA_PARAM.rowid :s_ind ,
            :ltTBL_R_CHA_PARAM.id :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm_cn :s_ind ,
            :ltTBL_R_CHA_PARAM.status :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_ys :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_qs :s_ind ,
            :ltTBL_R_CHA_PARAM.resv1 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv2 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv3 :s_ind ,
            :ltTBL_R_CHA_PARAM.xntd_flag :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_zsnm :s_ind ,
            :ltTBL_R_CHA_PARAM.priority :s_ind
        FROM
            tbl_r_cha_param
        WHERE
            ID = :ltTBL_R_CHA_PARAM.id;

        memcpy(pTBL_R_CHA_PARAM, &ltTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));
        break;

    case DBS_LOCK1 :
        EXEC SQL SELECT
            ROWID ,
            ID ,
            CHA_NM ,
            CHA_NM_CN ,
            STATUS ,
            CHA_FLAG_YS ,
            CHA_FLAG_QS ,
            RESV1 ,
            RESV2 ,
            RESV3 ,
            XNTD_FLAG ,
            CHA_ZSNM ,
            PRIORITY
        INTO
            :ltTBL_R_CHA_PARAM.rowid :s_ind ,
            :ltTBL_R_CHA_PARAM.id :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm_cn :s_ind ,
            :ltTBL_R_CHA_PARAM.status :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_ys :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_qs :s_ind ,
            :ltTBL_R_CHA_PARAM.resv1 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv2 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv3 :s_ind ,
            :ltTBL_R_CHA_PARAM.xntd_flag :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_zsnm :s_ind ,
            :ltTBL_R_CHA_PARAM.priority :s_ind
        FROM
            tbl_r_cha_param
        WHERE
            CHA_NM = :ltTBL_R_CHA_PARAM.cha_nm
        for update;

        memcpy(pTBL_R_CHA_PARAM, &ltTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));
        break;

    case DBS_LOCK2 :
        EXEC SQL SELECT
            ROWID ,
            ID ,
            CHA_NM ,
            CHA_NM_CN ,
            STATUS ,
            CHA_FLAG_YS ,
            CHA_FLAG_QS ,
            RESV1 ,
            RESV2 ,
            RESV3 ,
            XNTD_FLAG ,
            CHA_ZSNM ,
            PRIORITY
        INTO
            :ltTBL_R_CHA_PARAM.rowid :s_ind ,
            :ltTBL_R_CHA_PARAM.id :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_nm_cn :s_ind ,
            :ltTBL_R_CHA_PARAM.status :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_ys :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_flag_qs :s_ind ,
            :ltTBL_R_CHA_PARAM.resv1 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv2 :s_ind ,
            :ltTBL_R_CHA_PARAM.resv3 :s_ind ,
            :ltTBL_R_CHA_PARAM.xntd_flag :s_ind ,
            :ltTBL_R_CHA_PARAM.cha_zsnm :s_ind ,
            :ltTBL_R_CHA_PARAM.priority :s_ind
        FROM
            tbl_r_cha_param
        WHERE
            ID = :ltTBL_R_CHA_PARAM.id
        for update;

        memcpy(pTBL_R_CHA_PARAM, &ltTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));
        break;

    case DBS_UPDATE1 :
        EXEC SQL UPDATE
            tbl_r_cha_param
        SET
            ID                      = :ltTBL_R_CHA_PARAM.id ,
            CHA_NM                  = :ltTBL_R_CHA_PARAM.cha_nm ,
            CHA_NM_CN               = :ltTBL_R_CHA_PARAM.cha_nm_cn ,
            STATUS                  = :ltTBL_R_CHA_PARAM.status ,
            CHA_FLAG_YS             = :ltTBL_R_CHA_PARAM.cha_flag_ys ,
            CHA_FLAG_QS             = :ltTBL_R_CHA_PARAM.cha_flag_qs ,
            RESV1                   = :ltTBL_R_CHA_PARAM.resv1 ,
            RESV2                   = :ltTBL_R_CHA_PARAM.resv2 ,
            RESV3                   = :ltTBL_R_CHA_PARAM.resv3
        WHERE
            ROWID = :ltTBL_R_CHA_PARAM.rowid;

        break;

    case DBS_UPDATE2 :
        EXEC SQL UPDATE
            tbl_r_cha_param
        SET
            STATUS                  = :ltTBL_R_CHA_PARAM.status
        WHERE
            ID = :ltTBL_R_CHA_PARAM.id;

        break;

    case DBS_INSERT :
        EXEC SQL INSERT INTO tbl_r_cha_param (
            ID ,
            CHA_NM ,
            CHA_NM_CN ,
            STATUS ,
            CHA_FLAG_YS ,
            CHA_FLAG_QS ,
            RESV1 ,
            RESV2 ,
            RESV3 ,
            XNTD_FLAG ,
            CHA_ZSNM ,
            PRIORITY
        ) VALUES (
            :ltTBL_R_CHA_PARAM.id ,
            :ltTBL_R_CHA_PARAM.cha_nm ,
            :ltTBL_R_CHA_PARAM.cha_nm_cn ,
            :ltTBL_R_CHA_PARAM.status ,
            :ltTBL_R_CHA_PARAM.cha_flag_ys ,
            :ltTBL_R_CHA_PARAM.cha_flag_qs ,
            :ltTBL_R_CHA_PARAM.resv1 ,
            :ltTBL_R_CHA_PARAM.resv2 ,
            :ltTBL_R_CHA_PARAM.resv3 ,
            :ltTBL_R_CHA_PARAM.xntd_flag ,
            :ltTBL_R_CHA_PARAM.cha_zsnm ,
            :ltTBL_R_CHA_PARAM.priority
        );
        break;

    default :
        return DB_DBSFUNCERR;
    }

    return sqlca.sqlcode;
}


int DbsCntTBL_R_CHA_PARAM(int ifunc, struct TBL_R_CHA_PARAM_Def *pTBL_R_CHA_PARAM, char *psCount, int nCntSize)
{
    memcpy(&ltTBL_R_CHA_PARAM, pTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));

    memset(s_count, 0, sizeof(s_count));

    switch (ifunc) {
    default :
        return DB_DBSFUNCERR;
    }

    return sqlca.sqlcode;
}


int DbsStatTBL_R_CHA_PARAM(int ifunc, struct TBL_R_CHA_PARAM_Def *pTBL_R_CHA_PARAM, char *psCount, int nCntSize)
{
    memcpy(&ltTBL_R_CHA_PARAM, pTBL_R_CHA_PARAM, sizeof(ltTBL_R_CHA_PARAM));

    memset(s_count, 0, sizeof(s_count));

    switch (ifunc) {
    default :
        return DB_DBSFUNCERR;
    }

    return sqlca.sqlcode;
}
