/*
 *  Copyright 2006, Shanghai Huateng Software Systems Co., Ltd.
 *  All right reserved.
 *
 *  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF SHANGHAI HUATENG
 *  SOFTWARE SYSTEMS CO., LTD.  THE CONTENTS OF THIS FILE MAY NOT
 *  BE DISCLOSED TO THIRD PARTIES, COPIED OR DUPLICATED IN ANY FORM,
 *  IN WHOLE OR IN PART, WITHOUT THE PRIOR WRITTEN PERMISSION OF
 *  SHANGHAI HUATENG SOFTWARE SYSTEMS CO., LTD.
 *
 *  $Id$
 *
 *  function: table tbl_r_cha_mod operator function
 *
 *  Edit History:
 *
 *    2017/08/15 09:18:27 by gendb
 */
 
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "dbs/dbsdef.h"
EXEC SQL include sqlca;
EXEC SQL include sqlda;


EXEC SQL BEGIN DECLARE SECTION;
struct TBL_R_CHA_MOD_Def {
    char       rowid[21];    /*  */
    int        id;    /* 通道模型编号(自增ID) */
    char       name[129];    /* 模型名称 */
    char       status[2];    /* 启用状态 0-正常使用 1-不启用 2-当日已走满自动停用 */
    int        priority;    /* 优先级 */
    char       channel_nm[257];    /* 通道名称 alpy-支付宝 wcht-微信 */
    char       channel_name_cn[257];    /* 通道中文名称 */
    char       oprate[21];    /* 关联通道商户操作 */
    char       resv[257];    /* 预留 */
    char       remark[1025];    /* 备注 */
    char       create_tm[15];    /* 创建时间 */
    int        create_id;    /*  */
    char       lupd_tm[15];    /*  */
    int        lupd_id;    /*  */
} ltTBL_R_CHA_MOD;
short s_ind;
char  s_count[33];
EXEC SQL END DECLARE SECTION;
/*************************************************************************/
/*    input : DBS_FUNC   the dbs func                                    */
/*            The struct pointer defined in upper.                       */
/*    return : the sqlca.sqlcode                                         */
/*************************************************************************/
int DbsTBL_R_CHA_MOD(int ifunc, struct TBL_R_CHA_MOD_Def *pTBL_R_CHA_MOD)
{
    memcpy(&ltTBL_R_CHA_MOD, pTBL_R_CHA_MOD, sizeof(ltTBL_R_CHA_MOD));

    switch (ifunc) {
    case DBS_SELECT1 :
        EXEC SQL SELECT
            ROWID ,
            ID ,
            NAME ,
            STATUS ,
            PRIORITY ,
            CHANNEL_NM ,
            CHANNEL_NAME_CN ,
            OPRATE ,
            RESV ,
            REMARK ,
            CREATE_TM ,
            CREATE_ID ,
            LUPD_TM ,
            LUPD_ID
        INTO
            :ltTBL_R_CHA_MOD.rowid :s_ind ,
            :ltTBL_R_CHA_MOD.id :s_ind ,
            :ltTBL_R_CHA_MOD.name :s_ind ,
            :ltTBL_R_CHA_MOD.status :s_ind ,
            :ltTBL_R_CHA_MOD.priority :s_ind ,
            :ltTBL_R_CHA_MOD.channel_nm :s_ind ,
            :ltTBL_R_CHA_MOD.channel_name_cn :s_ind ,
            :ltTBL_R_CHA_MOD.oprate :s_ind ,
            :ltTBL_R_CHA_MOD.resv :s_ind ,
            :ltTBL_R_CHA_MOD.remark :s_ind ,
            :ltTBL_R_CHA_MOD.create_tm :s_ind ,
            :ltTBL_R_CHA_MOD.create_id :s_ind ,
            :ltTBL_R_CHA_MOD.lupd_tm :s_ind ,
            :ltTBL_R_CHA_MOD.lupd_id :s_ind
        FROM
            tbl_r_cha_mod
        WHERE
            ID = :ltTBL_R_CHA_MOD.id;

        memcpy(pTBL_R_CHA_MOD, &ltTBL_R_CHA_MOD, sizeof(ltTBL_R_CHA_MOD));
        break;

    case DBS_LOCK1 :
        EXEC SQL SELECT
            ROWID ,
            ID ,
            NAME ,
            STATUS ,
            PRIORITY ,
            CHANNEL_NM ,
            CHANNEL_NAME_CN ,
            OPRATE ,
            RESV ,
            REMARK ,
            CREATE_TM ,
            CREATE_ID ,
            LUPD_TM ,
            LUPD_ID
        INTO
            :ltTBL_R_CHA_MOD.rowid :s_ind ,
            :ltTBL_R_CHA_MOD.id :s_ind ,
            :ltTBL_R_CHA_MOD.name :s_ind ,
            :ltTBL_R_CHA_MOD.status :s_ind ,
            :ltTBL_R_CHA_MOD.priority :s_ind ,
            :ltTBL_R_CHA_MOD.channel_nm :s_ind ,
            :ltTBL_R_CHA_MOD.channel_name_cn :s_ind ,
            :ltTBL_R_CHA_MOD.oprate :s_ind ,
            :ltTBL_R_CHA_MOD.resv :s_ind ,
            :ltTBL_R_CHA_MOD.remark :s_ind ,
            :ltTBL_R_CHA_MOD.create_tm :s_ind ,
            :ltTBL_R_CHA_MOD.create_id :s_ind ,
            :ltTBL_R_CHA_MOD.lupd_tm :s_ind ,
            :ltTBL_R_CHA_MOD.lupd_id :s_ind
        FROM
            tbl_r_cha_mod
        WHERE
            ID = :ltTBL_R_CHA_MOD.id
        for update;

        memcpy(pTBL_R_CHA_MOD, &ltTBL_R_CHA_MOD, sizeof(ltTBL_R_CHA_MOD));
        break;

    case DBS_UPDATE1 :
        EXEC SQL UPDATE
            tbl_r_cha_mod
        SET
            ID                      = :ltTBL_R_CHA_MOD.id ,
            NAME                    = :ltTBL_R_CHA_MOD.name ,
            STATUS                  = :ltTBL_R_CHA_MOD.status ,
            PRIORITY                = :ltTBL_R_CHA_MOD.priority ,
            CHANNEL_NM              = :ltTBL_R_CHA_MOD.channel_nm ,
            CHANNEL_NAME_CN         = :ltTBL_R_CHA_MOD.channel_name_cn ,
            OPRATE                  = :ltTBL_R_CHA_MOD.oprate ,
            RESV                    = :ltTBL_R_CHA_MOD.resv ,
            REMARK                  = :ltTBL_R_CHA_MOD.remark ,
            CREATE_TM               = :ltTBL_R_CHA_MOD.create_tm ,
            CREATE_ID               = :ltTBL_R_CHA_MOD.create_id ,
            LUPD_TM                 = :ltTBL_R_CHA_MOD.lupd_tm ,
            LUPD_ID                 = :ltTBL_R_CHA_MOD.lupd_id
        WHERE
            ROWID = :ltTBL_R_CHA_MOD.rowid;

        break;

    case DBS_INSERT :
        EXEC SQL INSERT INTO tbl_r_cha_mod (
            ID ,
            NAME ,
            STATUS ,
            PRIORITY ,
            CHANNEL_NM ,
            CHANNEL_NAME_CN ,
            OPRATE ,
            RESV ,
            REMARK ,
            CREATE_TM ,
            CREATE_ID ,
            LUPD_TM ,
            LUPD_ID
        ) VALUES (
            :ltTBL_R_CHA_MOD.id ,
            :ltTBL_R_CHA_MOD.name ,
            :ltTBL_R_CHA_MOD.status ,
            :ltTBL_R_CHA_MOD.priority ,
            :ltTBL_R_CHA_MOD.channel_nm ,
            :ltTBL_R_CHA_MOD.channel_name_cn ,
            :ltTBL_R_CHA_MOD.oprate ,
            :ltTBL_R_CHA_MOD.resv ,
            :ltTBL_R_CHA_MOD.remark ,
            :ltTBL_R_CHA_MOD.create_tm ,
            :ltTBL_R_CHA_MOD.create_id ,
            :ltTBL_R_CHA_MOD.lupd_tm ,
            :ltTBL_R_CHA_MOD.lupd_id
        );
        break;

    default :
        return DB_DBSFUNCERR;
    }

    return sqlca.sqlcode;
}


int DbsCntTBL_R_CHA_MOD(int ifunc, struct TBL_R_CHA_MOD_Def *pTBL_R_CHA_MOD, char *psCount, int nCntSize)
{
    memcpy(&ltTBL_R_CHA_MOD, pTBL_R_CHA_MOD, sizeof(ltTBL_R_CHA_MOD));

    memset(s_count, 0, sizeof(s_count));

    switch (ifunc) {
    default :
        return DB_DBSFUNCERR;
    }

    return sqlca.sqlcode;
}


int DbsStatTBL_R_CHA_MOD(int ifunc, struct TBL_R_CHA_MOD_Def *pTBL_R_CHA_MOD, char *psCount, int nCntSize)
{
    memcpy(&ltTBL_R_CHA_MOD, pTBL_R_CHA_MOD, sizeof(ltTBL_R_CHA_MOD));

    memset(s_count, 0, sizeof(s_count));

    switch (ifunc) {
    default :
        return DB_DBSFUNCERR;
    }

    return sqlca.sqlcode;
}
